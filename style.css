@tailwind base;
@tailwind components;
@tailwind utilities;

button {
  @apply appearance-none cursor-pointer flex font-bold gap-2 h-12 items-center justify-center outline-none px-5 relative rounded text-center text-sm tracking-wider w-full;
}

button:hover .lines svg {
  animation: stroke 500ms linear;
}

@keyframes stroke {
  30%, 55% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    stroke-dashoffset: 5;
  }
}

/* Styles for blue button */
.primary {
  @apply text-black;

  background: linear-gradient(100deg, #01a4ff 35%, #01ffc2 115%);
}

/* Styles for Transparent Button */
.transparent {
  border: 1px solid hsla(0, 0%, 100%, 0.6);
  transition: color 200ms ease, background-color 200ms ease,
    border-color 200ms ease;
  box-shadow: 0 1px 2px rgba(0, 0, 0), 0 4px 16px rgba(0, 0, 0),
    0 4px 24px rgba(0, 0, 0);
  transition: color 200ms ease, background-color 200ms ease,
    border-color 200ms ease;

  @apply bg-transparent text-white transition-colors;
}

/* The SVGs are overlapping with the button
The SVGs will create the glimmer effect
*/
.lines {
  position: absolute;
  inset: 0;
  mix-blend-mode: hard-light;
  pointer-events: none;
  z-index: 1;
}

.primary .lines > div,
.transparent .lines > div {
  position: absolute;
  inset: 0;
}

/* The all the SVGs are slightly tilted */
/*  Notice that the fill property is set to none so you do not see the "inside" of the SVG - You only want to see the glimmer. 
Also whe start out with opacity 0 and increase the opacity at :hover
We also animate the stroke-dashoffset from 12 to 5. stroke-dashoffset pulls the dash into one direction
*/
.primary .lines > div svg {
  display: block;
  position: absolute;
  inset: 0;
  overflow: visible;
  fill: none;
  stroke-width: 2;
  stroke: #01a4ff;
  width: 100%;
  height: 100%;
  stroke-dasharray: 12 12;
  stroke-dashoffset: 12;
  opacity: 0;
  transform: translate3d(0, 0, 0);
}
.transparent .lines > div svg {
  display: block;
  position: absolute;
  inset: 0;
  overflow: visible;
  fill: none;
  stroke-width: 2;
  stroke: #c9e9ff;
  width: 100%;
  height: 100%;
  stroke-dasharray: 12 12;
  stroke-dashoffset: 12;
  opacity: 0;
  transform: translate3d(0, 0, 0);
}

/* Layered colors of each rect in the SVG 
This is mainly done to give the Button glimmer some extra Oomph!
*/

.transparent .lines > div svg:nth-child(1) {
  stroke: #f8fcff;
}

.primary .lines > div svg:nth-child(1) {
  stroke: #01ffc2;
}
.primary .lines > div svg:nth-child(2),
.transparent .lines > div svg:nth-child(2) {
  stroke-width: 6px;
  filter: blur(20px);
}

.primary .lines > div svg:nth-child(3),
.transparent .lines > div svg:nth-child(3) {
  stroke-width: 5px;
  filter: blur(6px);
}

.primary .lines > div svg:nth-child(4),
.transparent .lines > div svg:nth-child(4) {
  stroke-width: 10px;
  filter: blur(56px);
}

/* The glimmer starts on the top left corner and in the bottom right corner. We have a total of 8 SVGs per button we just rotate the latter four SVGs to duplicate the effect. */
.primary .lines > div:last-child,
.transparent .lines > div:last-child {
  transform: rotate(180deg);
}

/* Animation of the glimmer - speeds up at the end.
The animation needs to be linear as the timing function relates to each step.You can have it as linear and play with the percentages in the keyframes
*/
@keyframes stroke {
  30%,
  55% {
    opacity: 1;
  }
  100% {
    stroke-dashoffset: 5;
    opacity: 0;
  }
}

